import React, { useState, useEffect } from 'react';
import mqtt from 'mqtt';

const MqttDashboard = ({ topic, updateDashboard }) => {
  const [message, setMessage] = useState('');

  useEffect(() => {
    const brokerAddress = 'mqtt://localhost:1883'; // Replace with your MQTT server address
    const connect = async () => {
      try {
        const client = mqtt.connect(brokerAddress);
        client.on('connect', () => {
          console.log('Connected to MQTT broker');
          client.subscribe(topic);
        });
        client.on('error', (err) => {
          console.error('Error connecting to MQTT broker:', err);
        });
        client.on('message', (receivedTopic, receivedMessage) => {
          if (receivedTopic === topic) {
            setMessage(String(receivedMessage)); // Ensure message is a string
            updateDashboard(receivedMessage); // Call update function
          }
        });
      } catch (error) {
        console.error('Error establishing MQTT connection:', error);
      }
    };

    connect();

    return () => {
      // Cleanup function to disconnect client on component unmount
      if (client) {
        client.end();
      }
    };
  }, [topic]); // Dependency array to re-subscribe if topic changes

  return (
    <div>
      {/* Update the dashboard content based on the message state */}
      {updateDashboard(message)}
    </div>
  );
};

export default MqttDashboard;
